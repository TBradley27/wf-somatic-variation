//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    /* feature flags
    * The workflow will have similar features to the wf-human-variation:
    * 1) Short variants,
    * 2) Structural variants,
    * 3) Modified base calling,
    */
    sv = false
    mod = false
    snv = false
    str = false

    // common
    bam_normal = null
    bam_tumor = null
    sample_name = "SAMPLE"
    ref = null
    bed = null
    tr_bed = null
    out_dir = "output"
    ubam_map_threads = 8
    ubam_sort_threads = 3
    ubam_bam2fq_threads = 1

    // QC metrics
    tumor_min_coverage = 20
    normal_min_coverage = 20
    depth_window_size = 50000
    depth_intervals = false

    // ClairS parameters
    basecaller_cfg = "dna_r10.4.1_e8.2_400bps_sup@v3.5.2"
    // ClairS parameters
    skip_haplotype_filter = false
    haplotype_filter_threads = 4
    ctg_name = "EMPTY"
    include_all_ctgs = false
    snv_min_af = 0.05
    indel_min_af = 0.05 // This will be set to 1.00 if the model is not a dna_r10 one.
    min_contig_size = 0
    min_qual = 8
    min_cov = 4
    use_longphase = true
    use_longphase_intermediate = true
    print_ref_calls = false
    print_germline_calls = false
    phase_normal = false
    clairs_debug = false
    fast_mode = false
    // Clair3 parameters
    clair3_phase_vcf = false
    clair3_ref_pct_full = 0.1
    clair3_var_pct_full = 0.7
    clair3_min_mq = 5
    GVCF = false
    vcf_fn = "EMPTY"

    // nanomonsv caller options
    min_sv_length = 50
    nanomonsv_get_threads = 4
    classify_insert = false

    // modkit
    force_strand = false
    modkit_args = null
    dss_threads = 1
    modkit_threads = 4

    // Generic options
    help = false
    version = false
    aws_image_prefix = null
    aws_queue = null
    disable_ping = false

    // nfcore
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        example_cmd = [
            "--snv",
            "--sv",
            "--mod",
            "--sample_name 'MYSAMPLE'", 
            "--ref 'wf-somatic-variation-demo/GCA_000001405.15_GRCh38_no_alt_analysis_set_chr20.fna'",
            "--bed 'wf-somatic-variation-demo/demo.bed'",
            "--bam_normal 'wf-somatic-variation-demo/demo_normal.bam'",
            "--bam_tumor 'wf-somatic-variation-demo/demo_tumor.bam'",
        ]
        container_sha = "shacfc6698597d8e706d10bdc08da27216ca726ae3a"
        container_snp_sha = "shabfe6691d504a96860cc492f85bb8016486ff9d6a"
        container_sv_sha = "shaf61e1b2ca32173cfe349f07a39a72e892bad891e"
        container_mod_sha = "sha115a513838851c17f06e499c224f946e16c643aa"
        agent = null
    }
}

manifest {
    name            = 'epi2me-labs/wf-somatic-variation'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-somatic-variation'
    description     = 'Somatic structural variants, methylation, short variants and short tandem repeat workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=22.10.8'
    version         = 'v0.2.0'
}

epi2melabs {
    tags = 'somatic variant'
    icon = 'faDisease'
}

executor {
    $local {
        cpus = 16
        memory = "12 GB"
    }
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    container = "ontresearch/wf-somatic-variation:${params.wf.container_sha}"
    withLabel:wf_somatic_snv {
        container = "ontresearch/wf-somatic-snp:${params.wf.container_snp_sha}"
    }
    withLabel:wf_somatic_methyl {
        container = "ontresearch/wf-somatic-methyl:${params.wf.container_mod_sha}"
    }
    withLabel:wf_somatic_sv {
        container = "ontresearch/wf-somatic-sv:${params.wf.container_sv_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            container = "${params.aws_image_prefix}-wf-somatic-variation:${params.wf.container_sha}-root"
            withLabel:wf_somatic_snv {
                container = "${params.aws_image_prefix}-wf-somatic-snp:${params.wf.container_snp_sha}-root"
            }
            withLabel:wf_somatic_sv {
                container = "${params.aws_image_prefix}-wf-somatic-sv:${params.wf.container_sv_sha}-root"
            }
            withLabel:wf_somatic_methyl {
                container = "${params.aws_image_prefix}-wf-somatic-methyl:${params.wf.container_mod_sha}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
}
